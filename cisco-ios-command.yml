- name: PLAY 1 - CISCO IOS Command
  hosts: "{{ ios_device }}"
  connection: ansible.netcommon.network_cli
  gather_facts: true
  vars:
    ansible_connection: ansible.netcommon.network_cli
    ansible_network_os: "{{ inventory_network_os }}"
    ansible_become: true
    ansible_become_method: enable
    ansible_host: "{{ inventory_host }}"
    ansible_user: "{{ inventory_user }}"
    ansible_password: "{{ inventory_pass }}"

    backup_file_name: "{{ inventory_hostname }}-{{ ansible_date_time.date }}-{{ ansible_date_time.hour }}-{{ ansible_date_time.minute }}-{{ ansible_date_time.second }}"
  tasks:
    - name: 00- Gather all legacy facts
      cisco.ios.ios_facts:
        available_network_resources: false
        gather_subset: all
        gather_network_resources: hostname
      register: output
      when: ansible_network_os == 'cisco.ios.ios'
    - name: 01- copy output to file
      copy: content="{{ output }}" dest=./output/{{ backup_file_name }}.facts
      when: ansible_network_os == 'cisco.ios.ios'

    - name: 02- show running-config if Cisco IOS on remote devices
      cisco.ios.ios_command:
        commands:
          -  show running-config
      register: output
      when: ansible_network_os == 'cisco.ios.ios'
#    - name: show output
#      debug:
#        var: output.stdout[0]
    - name: 03- copy output to file
      copy: content="{{ output.stdout[0] }}" dest=./output/{{ backup_file_name }}.txt
      when: ansible_network_os == 'cisco.ios.ios'
